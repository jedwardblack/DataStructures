
public class FAItemOrderedList {
	
	Item[] itemArray;
	int myCount;
	
	public FAItemOrderedList() {
		itemArray = new Item[50];
		myCount = 0;
	}
	
	//Inserts the product into the list if 
	//its key is unique (case insensitive) and the list is not full. 
	//Returns true if successful; otherwise, false.
	public boolean add(Item input) {
		
		boolean result = false;
		String inputName = input.getName();
		
		if (isEmpty())
			itemArray[0] = input;
			result = true;
		if (isFull())
			result = false;
		else
			for (int i=0; i<50; i++) {
				if (inputName.compareTo(itemArray[i].getName()) > 0)
					continue;
				if (inputName.compareTo(itemArray[i].getName()) == 0)
					break;
				else {
					itemArray[i+1] = itemArray[i];
					itemArray[i] = input;
					result = true;
					myCount++;
					break;
				}
			}
		return result;
				
					
	}

	//Returns the Item having the specified key value (case insensitive)
	//Otherwise, return null if not found.
	public Item retrieve(String find) {
		Item result = null;
		for (int i=0; i<myCount; i++) {
			if (itemArray[i].getName().equalsIgnoreCase(find) == true) {
				result = itemArray[i];
				break;
			}
			else continue;
		}
		return result;
	}

	//Deletes the Item with the given key (case insensitive). 
	//Returns true if an Item was found and deleted; else, false.
	public boolean delete(String find) {
		boolean result = false;
		for (int i=0; i<50; i++) {
			if (find.compareTo(itemArray[i].getName()) == 0) {
				itemArray[i] = null;
				result = true;
				break;
			}
			else continue;	
		}
		return result;
	}
	
	//Resets the list to the empty state.
	public void clear() {
		for (int i=0; i<50; i++) {
			itemArray[i] = null;
		}
	}

	//Returns true if and only if the list is empty.
	public boolean isEmpty() {
		boolean result = true;
		if (myCount != 0)
			result = false;
		return result;
	}
	
	//Returns true if and only if the list is full.
	public boolean isFull() {
		boolean result = true;
		if (myCount != 49)
			result = false;
		return result;
	}
	
	//Prints all of the Items in the list 
	//in ascending order by the key field.
	public void print() {	
	}

}
